{"version":3,"sources":["../src/index.js"],"names":["express","require","router","Router","mongoose","swaggerJSDoc","swaggerUi","api","articleRoutes","queryRouter","likeRouter","commentRouter","loginRouter","signupRouter","PORT","process","env","config","swaggerDefinition","openapi","info","title","version","description","license","name","url","contact","servers","options","apis","swaggerSpec","app","console","log","DBHost","connectDB","connect","useNewUrlParser","useUnifiedTopology","then","use","json","serve","setup","set","listen","util","getEnv","error","module","exports"],"mappings":"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","sourcesContent":["\r\n\r\nconst express = require(\"express\");\r\nconst router = express.Router();\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst swaggerJSDoc = require(\"swagger-jsdoc\");\r\nconst swaggerUi = require(\"swagger-ui-express\")\r\n\r\nconst api = require(\"./routes/api\")\r\nconst articleRoutes = require(\"./routes/article\")\r\nconst queryRouter = require(\"./routes/query\")\r\nconst likeRouter = require(\"./routes/like\")\r\nconst commentRouter = require(\"./routes/comment\")\r\n\r\nconst loginRouter = require(\"./routes/login\")\r\nconst signupRouter = require(\"./routes/sign-up\")\r\n\r\n\r\nconst PORT = process.env.PORT || 5000;\r\nconst config = require(\"config\")\r\n\r\nconst swaggerDefinition = {\r\n        openapi: '3.0.0',\r\n        info: {\r\n          title: 'Express API for My Blog',\r\n          version: '1.0.0',\r\n        },\r\n        description:\r\n        'This is a REST API application made with Express. It retrieves data from Mongodb using mongoose.',\r\n      license: {\r\n        name: 'Licensed Under MIT',\r\n        url: 'https://spdx.org/licenses/MIT.html',\r\n      },\r\n      contact: {\r\n        name:\"Rukundo Kevin\",\r\n        url: 'https://www.rukundokevin.codes',\r\n      },\r\n      servers: [\r\n        {\r\n          url: 'http://localhost:5000',\r\n          description: 'Development server',\r\n        }]\r\n        ,\r\n      };\r\n      \r\n      const options = {\r\n        swaggerDefinition,\r\n        // Paths to files containing OpenAPI definitions\r\n        apis: ['./routes/*.js'],\r\n      };\r\n      \r\n      const swaggerSpec = swaggerJSDoc(options);\r\n\r\nconst app = express();\r\n\r\nconsole.log(config.DBHost)\r\n\r\nconst connectDB = async () => {\r\n        await mongoose.connect(config.DBHost, { useNewUrlParser: true, useUnifiedTopology: true })\r\n        .then(()=>{\r\n                //middlewares\r\n                app.use(express.json())\r\n                 \r\n                //middlewares for routes\r\n                app.use('/docs', swaggerUi.serve, swaggerUi.setup(swaggerSpec));\r\n\r\n                app.use(\"/\",api)\r\n                app.use(\"/article\",articleRoutes)\r\n                app.use(\"/query\",queryRouter)\r\n                app.use(\"/like\",likeRouter)\r\n                app.use(\"/comment\",commentRouter)\r\n\r\n                app.use(\"/login\", loginRouter)\r\n                app.use(\"/signup\", signupRouter)\r\n\r\n\r\n                app.set(\"port\",PORT)\r\n\r\n                app.listen(PORT, () =>{\r\n                  if(config.util.getEnv('NODE_ENV') != 'test'){\r\n                    console.log(\"server started\")\r\n                    } \r\n                  })\r\n\r\n        })\r\n            .catch(function (error) {\r\n                console.log(`Unable to connect to the Mongo db  ${error} `);\r\n            });\r\n    };\r\n    \r\n    // use as a function        \r\n    connectDB();\r\n    module.exports = app;\r\n"],"file":"index.js"}